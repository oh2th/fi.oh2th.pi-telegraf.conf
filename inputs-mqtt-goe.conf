# Telegraf Configuration
#
# Reset the topic on the go-eCharger to remove the leasing "/" from topic
# curl 'http://192.168.4.16/api/set?mtp="go-eCharger/201397/"'
#
###############################################################################

# Read metrics from MQTT topic(s) go-eCharger Integer values
[[inputs.mqtt_consumer]]
  servers = ["tcp://localhost:1883"]
  topics = [
    "go-eCharger/+/rssi", # Wifi RSSI signal strength
    "go-eCharger/+/eto",  # energy_total, measured in Wh
    "go-eCharger/+/ama",  # ampere_max limit
    "go-eCharger/+/amp",  # requestedCurrent in Ampere
    "go-eCharger/+/wh",   # energy in Wh since car connected
    "go-eCharger/+/amt",  # temperatureCurrentLimit
  ]

  data_format = "value"
  data_type = "integer"
  topic_tag = ""

  connection_timeout = "30s"
  qos = 0
  username = "telegraf"
  password = "VerySecretTelegrafPassword"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "go-eCharger/+/+"
    measurement = "measurement/_/_"
    tags = "_/chargerid/field"

  [[processors.pivot]]
    tag_key = "field"
    value_key = "value"

# Read metrics from MQTT topic(s) go-eCharger Boolean values
[[inputs.mqtt_consumer]]
  servers = ["tcp://localhost:1883"]
  topics = [
    "go-eCharger/+/alw", # Is the car allowed to charge at all now?
    "go-eCharger/+/adi", # Is the 16A adapter used? Limits the current to 16A
  ]

  data_format = "value"
  data_type = "boolean"
  topic_tag = ""

  connection_timeout = "30s"
  qos = 0
  username = "telegraf"
  password = "VerySecretTelegrafPassword"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "go-eCharger/+/+"
    measurement = "measurement/_/_"
    tags = "_/chargerid/field"

  [[processors.pivot]]
    tag_key = "field"
    value_key = "value"

# Read metrics from MQTT topic(s) go-eCharger string values for post processing
# cards - go-eCharger/201397/cards = [{"name":"n/a","energy":0,"cardId":false},{"name":"n/a","energy":0,"cardId":false},{"name":"n/a","energy":0,"cardId":false},{"name":"n/a","energy":0,"cardId":false},{"name":"n/a","energy":0,"cardId":false},{"name":"n/a","energy":0,"cardId":false},{"name":"n/a","energy":0,"cardId":false},{"name":"n/a","energy":0,"cardId":false},{"name":"n/a","energy":0,"cardId":false},{"name":"n/a","energy":0,"cardId":false}]

[[inputs.mqtt_consumer]]
  servers = ["tcp://localhost:1883"]
  topics = [
    "go-eCharger/+/tma", # temperature sensors
    "go-eCharger/+/nrg", # Energy metrics: voltage, ampers, power and power factor
  ]

  data_format = "value"
  data_type = "string"
  topic_tag = ""

  connection_timeout = "30s"
  qos = 0
  username = "telegraf"
  password = "VerySecretTelegrafPassword"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "go-eCharger/+/+"
    measurement = "measurement/_/_"
    tags = "_/chargerid/field"

[[processors.regex]]
  order = 1
  [[processors.regex.fields]]
    namepass = ["go-eCharger"]
    fieldpass = ["tma"]
    key = "tma"
    pattern = '^\[(\d+\.?\d*),(\d+\.?\d*)\]$'
    replacement = "${1}"
    result_key = "t1"

  [[processors.regex.fields]]
    namepass = ["go-eCharger"]
    fieldpass = ["tma"]
    key = "tma"
    pattern = '^\[(\d+\.?\d*),(\d+\.?\d*)\]$'
    replacement = "${2}"
    result_key = "t2"

  # nrg - energy array, U (L1, L2, L3, N), I (L1, L2, L3), P (L1, L2, L3, N, Total), pf (L1, L2, L3, N) go-eCharger/201397/nrg = [233.43,2.48,3.41,1.24,0,0,0,0,0,0,0,0,0,0,0,0]
  # Line voltages u_l1, u_l2, u_l3 and u_n
  [[processors.regex.fields]]
    namepass = ["go-eCharger"]
    fieldpass = ["nrg"]
    key = "nrg"
    pattern = '^\[(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*)\]$'
    replacement = "${1}"
    result_key = "u_l1"

  [[processors.regex.fields]]
    namepass = ["go-eCharger"]
    fieldpass = ["nrg"]
    key = "nrg"
    pattern = '^\[(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*)\]$'
    replacement = "${2}"
    result_key = "u_l2"

  [[processors.regex.fields]]
    namepass = ["go-eCharger"]
    fieldpass = ["nrg"]
    key = "nrg"
    pattern = '^\[(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*)\]$'
    replacement = "${3}"
    result_key = "u_l3"

  [[processors.regex.fields]]
    namepass = ["go-eCharger"]
    fieldpass = ["nrg"]
    key = "nrg"
    pattern = '^\[(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*)\]$'
    replacement = "${4}"
    result_key = "u_n"

  # nrg - energy array, U (L1, L2, L3, N), I (L1, L2, L3), P (L1, L2, L3, N, Total), pf (L1, L2, L3, N) go-eCharger/201397/nrg = [233.43,2.48,3.41,1.24,0,0,0,0,0,0,0,0,0,0,0,0]
  # Line ampers i_l1, i_l2, i_l3
  [[processors.regex.fields]]
    namepass = ["go-eCharger"]
    fieldpass = ["nrg"]
    key = "nrg"
    pattern = '^\[(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*)\]$'
    replacement = "${5}"
    result_key = "i_l1"

  [[processors.regex.fields]]
    namepass = ["go-eCharger"]
    fieldpass = ["nrg"]
    key = "nrg"
    pattern = '^\[(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*)\]$'
    replacement = "${6}"
    result_key = "i_l2"

  [[processors.regex.fields]]
    namepass = ["go-eCharger"]
    fieldpass = ["nrg"]
    key = "nrg"
    pattern = '^\[(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*)\]$'
    replacement = "${7}"
    result_key = "i_l3"

  # nrg - energy array, U (L1, L2, L3, N), I (L1, L2, L3), P (L1, L2, L3, N, Total), pf (L1, L2, L3, N) go-eCharger/201397/nrg = [233.43,2.48,3.41,1.24,0,0,0,0,0,0,0,0,0,0,0,0]
  # Line power p_l1, p_l2, p_l3, p_n, p_tot
  [[processors.regex.fields]]
    namepass = ["go-eCharger"]
    fieldpass = ["nrg"]
    key = "nrg"
    pattern = '^\[(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*)\]$'
    replacement = "${8}"
    result_key = "p_l1"

  [[processors.regex.fields]]
    namepass = ["go-eCharger"]
    fieldpass = ["nrg"]
    key = "nrg"
    pattern = '^\[(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*)\]$'
    replacement = "${9}"
    result_key = "p_l2"

  [[processors.regex.fields]]
    namepass = ["go-eCharger"]
    fieldpass = ["nrg"]
    key = "nrg"
    pattern = '^\[(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*)\]$'
    replacement = "${10}"
    result_key = "p_l3"

  [[processors.regex.fields]]
    namepass = ["go-eCharger"]
    fieldpass = ["nrg"]
    key = "nrg"
    pattern = '^\[(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*)\]$'
    replacement = "${11}"
    result_key = "p_n"

  [[processors.regex.fields]]
    namepass = ["go-eCharger"]
    fieldpass = ["nrg"]
    key = "nrg"
    pattern = '^\[(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*),(\d+\.?\d*)\]$'
    replacement = "${12}"
    result_key = "p_tot"

[[processors.converter]]
  order = 2
  [processors.converter.fields]
    namepass = ["go-eCharger"]
    float = ["t1", "t2", "u_*", "i_*", "p_*"]
